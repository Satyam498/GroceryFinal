package com.cg.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cg.models.Product;
import com.cg.repository.ProductRepository;




/**
 * @author ${Satyam kumar}
 *
 *
 *@Repository is a Spring annotation that indicates that the decorated class is a repository. 
 *A repository is a mechanism for encapsulating storage, retrieval, and search behavior which emulates a collection of objects
 *
 *
 *Logger
 * ALL	All levels including custom levels.
DEBUG	Designates fine-grained informational events that are most useful to debug an application.
INFO	Designates informational messages that highlight the progress of the application at coarse-grained level.
WARN	Designates potentially harmful situations.
ERROR	Designates error events that might still allow the application to continue running.
FATAL	Designates very severe error events that will presumably lead the application to abort.
OFF	The highest possible rank and is intended to turn off logging.
TRACE	Designates finer-grained informational events than the DEBUG.

 *@Service
 *Service Components are the class file which contains @Service annotation.
 * These class files are used to write business logic in a different layer, separated from @RestController class file
 *
 *
 *
 */


@Service
public class ProductServiceImpl implements ProductInterface {

	@Autowired
	ProductRepository repository;

	@Override
	public List<Product> retriveAllProducts() {
		return repository.findAll();
	}

	@Override
	public void add(Product product) {
		repository.save(product);

	}

	@Override
	public Product editProduct(Product product) {
		Product prod = repository.save(product);
		return prod;
	}

	@Override
	public List<Product> delete(int id) {
		repository.deleteById(id);
		return repository.findAll();
	}

}
